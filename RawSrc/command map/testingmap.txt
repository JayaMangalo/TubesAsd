gcc commandmap.c map//map.c pcolor//pcolor.c stack//stack.c linkedlist//list_linked.c map//point.c map//listdin.c map//matrix.c node//node.c order//order.c

/* testing */
int main() {
  /* KAMUS */
  Map m;
  Matrix mat;
  ListDin l;
  POINT p;
  Stack tas;
  Order ord;
  List toDo;
  /* ALGORITMA */
  /* --- MAP --- */
  CreateMap(&m, 6, 6);
  readMatrix(&mat, 6, 6);
  setMatrix(&m, mat);
  displayMatrix(getMatrix(m));
  printf("\n");
  /* membuat list lokasi */
  CreateListDin(&l,26);
  p = MakePOINT(1,1); // lokasi headquarters
  insertBangunan(&l, '8', p); 
  p = MakePOINT(5,1);
  insertBangunan(&l, 'A', p);
  p = MakePOINT(3,3);
  insertBangunan(&l, 'B', p);
  p = MakePOINT(1,5);
  insertBangunan(&l, 'C', p);
  p = MakePOINT(4,5);
  insertBangunan(&l, 'D', p);
  p = MakePOINT(2,3);
  insertBangunan(&l, 'E', p);
  setLokasi(&m, l);
  /* --- TAS --- */
  CreateStack(&tas);
  ord = newOrder(1,'A','B','N',0);
  push(&tas,ord);
  ord = newOrder(2,'C','D','N',0); // dropoff di D, D warna biru
  push(&tas, ord);
  /* --- TODO --- */
  CreateList(&toDo);
  ord = newOrder(3,'E','D','N',0); // pickup di E, E warna merah
  insertFirst(&toDo, ord);
  ord = newOrder(3,'B','A','N',0); // pickup di B, B warna merah
  insertFirst(&toDo, ord);
  /* panggil command map */
  displayMap(m, 'C', tas, toDo, 6, 6);
  /* C warna kuning, headquarters hijau */
} 